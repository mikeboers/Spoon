
`git-base-account --delete` should warn if there are files there
`git-base-account` subcommands:
    add
    edit
    delete
    list
    group [-r role] -g group user
    group [-r role] -u user group

- test:
    - ssh access control
        - run our own SSH server
        - run nose inside an ssh-agent:
            (ssh-agent; ssh-add var/ssh/id_rsa; nosetests)
        - authorized_keys call to git-base-shell could include --testing, or
          something similar so that it can work
    - basic web access control

- move SSH_PORT into the main config, and the tests should pick up on that

- group access controls via roles on GroupMembership
- repo access controls via roles on RepoCollaborator

- pick from branches at the top of the commit list

- move repos/groups/users to trash, instead of deleting them
    - `is_trash` field on all of those
    
- 'Account.autocreate' and 'repo.autocreate'
    - Where do these get attached? A classproperty on Account could do...

- Should a user with `'wheel' in roles` get an instant pass?

- flash messages via https://github.com/HubSpot/messenger

- creating repos
- editing group memberships (inviting other users)

- main repo view is the README, or instructions on how to push to it, like github
    
    Create a new repository on the command line

        touch README.md
        git init
        git add README.md
        git commit -m "first commit"
        git remote add origin git@github.com:mikeboers/sandbox.git
        git push -u origin master
        Push an existing repository from the command line

    Push an existing repository

        git remote add origin git@github.com:mikeboers/sandbox.git
        git push -u origin master


- test the permissions!

- add `update` hook to repos on creation. It is run once for every branch being
  pushed BEFORE they are accepted, allowing us to do write/force/merge control.

    - http://git-scm.com/book/en/Customizing-Git-Git-Hooks#Server-Side-Hooks
    - https://github.com/sitaramc/gitolite/blob/master/src/lib/Gitolite/Hooks/Update.pm#L110

- read-only HTTP access to the repo. This is a matter of preparing a couple of
  special index files, see:

  http://git-scm.com/book/en/Git-Internals-Transfer-Protocols#The-Dumb-Protocol

- auth via GitHub, Facebook, passwords, or one-time links which create cookies
  for access to single projects.

- example.com/pypi to give a pip-usable interface using tags.

- be able to mark repos as clones from other locations. Periodically pull them,
  OR respond when they are hit with a webhook from GitHub or a post-recieve hook.


Name:
    git.ly
    gitly
    gitlight (too much like gitolite)
    gitter

    git pipe
    git house
    git-pump

    git-only
    gitsplore

    Git Get
    
    Git One (git-one)
    Git Me
    Git Base
    Git by Git
    Git Map

    git-stop
    git-town




