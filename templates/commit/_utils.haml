%%namespace(name='utils', file='/_utils.haml')
-!
    import datetime
    import re

    commit_time = lambda c: datetime.datetime.fromtimestamp(c.commit_time)


@author_info(commit)
    
    Authored by
    ${commit.author.name}
    ${fuzzy_time(commit_time(commit))}.
    -# We only really care about the author vs committer if the
    -# names are different; rebasing doesn't matter.
    - if any(getattr(commit.author, name) != getattr(commit.committer, name) for name in ('name', 'email')):
        Committed by
        ${commit.committer.name}
        ${fuzzy_time(commit.committer.time)}.


@alert(repo, commit)
    .alert.alert-info.media
        .media-object.pull-left +utils.gravatar(commit.author.email, size=48, class_='img-rounded')
        .media-body
            .btn-group.pull-right
                %a.btn.btn-xs.btn-primary(disabled=request.endpoint == 'tree', href=url_for('tree', repo=repo, ref=commit.oid.hex[:8])) Tree
                %a.btn.btn-xs.btn-primary(disabled=request.endpoint == 'commit', href=url_for('commit', repo=repo, commit=commit.oid.hex[:8])) Diff

            -
                message = re.sub(r'([ \t]*\n)+', '\n', commit.message)
                message = message.splitlines()
            %
                %strong &= commit.hex[:8] + ':'
                &= message[0]
            - if len(message) > 1:
                .git-commit-message &= '\n'.join(message[1:])
            %small +author_info(commit)
