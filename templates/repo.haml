%%inherit(file="/_main.haml")
%%namespace(name='tree_utils', file='tree.haml')
%%namespace(name='blob_utils', file='blob.haml')
-!
    import itertools
    import pygit2 as git
    from gitbase.utils import debug
-
    try:
        head = repo.git.head.get_object()
    except git.GitError:
        head = None


@breadcrumb
    %li
        %a(href=url_for('group', group=group))
            &= group.name
    %li
        &= repo.name



@render_title(repo, link=True)

    @_title
        - if repo.is_public:
            %span.glyphicon.glyphicon-book
        - else:
            %span.glyphicon.glyphicon-lock
        &= repo.group.name + ' / ' + repo.name

    - if link:
        %a(href=url_for('repo', repo=repo)) +_title
    - else:
        +_title


@render_card(repo, avatar_size=64, link=True)
    
    -
        try:
            head = repo.git.head.get_object()
        except git.GitError:
            head = None

    .media

        -# .pull-left
            %img.thumbnail.media-object(src=resized_img_src('/img/git-logo-pale.png', width=avatar_size, height=avatar_size), width=avatar_size, height=avatar_size)

        .media-body
            %h4.media-heading +render_title(repo, link=link)
            %p
                - if group.description: &= group.description
                - else: %em No description.
            - if not repo.is_public:
                %small %span.label.label-warning PRIVATE
            %p %small
                - if head: Last updated ${fuzzy_time(head.commit_time)}.
                - else: %em No commits.


+render_card(repo, link=False, avatar_size=128)

- if head:

    = tree_utils.render_tree(repo, head.tree, title=head.message)


    %h2 Recent Commits

    -
        commit_iter = repo.git.walk(head.oid, git.GIT_SORT_TOPOLOGICAL)
        commits = itertools.islice(commit_iter, 10)

    %ol - for commit in commits:
        %li
            %a(href=url_for('commit', repo=repo, commit=commit.hex[:8]))
                %code= commit.hex[:8]
                &= commit.message

    -
        next_ = next(commit_iter, None)
    - if next_:
        There are more, starting with
        %code &= next_.hex[:8]

- else:
    .alert.alert-warning There are no commits.


