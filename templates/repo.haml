%%inherit(file="/_main.haml")/
%%namespace(file="/tree.haml", name="tree_utils")/
%%namespace(file="/blob.haml", name="blob_utils")/
-!
    import itertools
    import pygit2 as git
    from gitbase.utils import debug
-
    head = repo.git.head.get_object()

@breadcrumb
    %li
        %a(href=url_for('group', group=group)) &= group.name
    %li
        &= repo.name


@render_card(repo, avatar_size=64, link=True)

    .media

        .pull-left
            %img.thumbnail.media-object(src=resized_img_src('/img/git-logo-pale.png', width=avatar_size, height=avatar_size), width=avatar_size, height=avatar_size)

        .media-body
            %h4.media-heading

                @title
                    &= repo.name
                    - if not repo.is_public:
                        %small %span.label.label-warning PRIVATE

                - if link:
                    %a(href=url_for('repo', repo=repo)) = title()
                - else:
                    = title()

            %p&= 'No description.'
            %p %small Last updated ${fuzzy_time(repo.git.head.get_object().commit_time)}.


= render_card(repo, link=False, avatar_size=128)

= tree_utils.render_tree(repo, head.tree, title=head.message)


%h2 Recent Commits

-
    commit_iter = repo.git.walk(head.oid, git.GIT_SORT_TOPOLOGICAL)
    commits = itertools.islice(commit_iter, 10)

%ol - for commit in commits:
    %li
        %a(href=url_for('commit', repo=repo, commit=commit.hex[:8]))
            %code= commit.hex[:8]
            &= commit.message

-
    next_ = next(commit_iter, None)
- if next_:
    There are more, starting with
    %code &= next_.hex[:8]

