%%inherit(file="/_main.haml")
%%namespace(name='blob_utils', file='blob.haml')
%%namespace(name='repo_utils', file='repo.haml')
%%namespace(name='utils', file='_utils.haml')

-!
    import os
    import pygit2
-
    group = repo.group

@breadcrumb
    %li
        %a(href=url_for('group', group=repo.group)) &= repo.group.name
    %li
        %a(href=url_for('repo', repo=repo)) &= repo.name
    %li
        %a(href=url_for('tree', repo=repo, ref=ref)) files

    - chunks = path.strip('/').split('/')
    - for i, chunk in enumerate(chunks):
        %li
            - if i + 1 < len(chunks):
                %a(href=url_for('tree', repo=repo, path='/'.join(chunks[:i + 1]))) &= chunk
            - else:
                &= chunk

+repo_utils.render_card(repo, link=False, avatar_size=128)

%ul.nav.nav-tabs

    %li %a(href=url_for('repo', repo=repo))
        +utils.icon('signal')
        Overview

    %li %a(href=url_for('commits', repo=repo))
        +utils.icon('list')
        Commits
    
    %li.active %a(href='#')
        +utils.icon('folder-open')
        Files


@render_tree(repo, tree, base='', title=None)

    .panel.panel-info

        .panel-heading %h2.panel-title
            &= title or '/' + base

        %table.table.table-condensed

            - if base: %tr
                - parent = os.path.dirname(base)
                - if parent:
                    %td %a(href=url_for('tree', repo=repo, path=parent)) ..
                - else:
                    %td %a(href=url_for('repo', repo=repo)) ..

            - for entry in tree: %tr

                - is_tree = isinstance(repo.git[entry.oid], pygit2.Tree)
                -# %td 
                    - if is_tree:
                        %span.glyphicon.glyphicon-folder-open
                    - else:
                        %span.glyphicon.glyphicon-file
                %td
                    %a(href=url_for('tree', repo=repo, path=os.path.join(base, entry.name)))
                        &= entry.name + ('/' if is_tree else '')
                -# %td << latest commit message >>
                -# %td &= fuzzy_time
                -# %td %a(href='#') %code &= entry.hex[:8]


= render_tree(repo, tree, path)

