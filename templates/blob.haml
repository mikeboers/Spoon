%%inherit(file="/_main.haml")/
-!
    import mimetypes
    import os

    import pygments
-
    group = repo.group

%ol.breadcrumb
    %li
        %a(href='/') %img(src="/img/git-logo.png")
    %li
        %a(href=url_for('group', group=group)) &= group.name
    %li
        %a(href=url_for('repo', repo=repo)) &= repo.name
    
    - chunks = path.strip('/').split('/')
    - for i, chunk in enumerate(chunks):
        %li
            - if i + 1 < len(chunks):
                %a(href=url_for('tree', repo=repo, path='/'.join(chunks[:i + 1]))) &= chunk
            - else:
                &= chunk


%%def(name='render_blob(blob, path)')
    -
        mimetype, encoding = mimetypes.guess_type(path)
        ext = os.path.splitext(path)[1]
        try:
            lexer = pygments.lexers.get_lexer_for_filename(path)
        except pygments.util.ClassNotFound:
            lexer = pygments.lexers.TextLexer()

        raw_url = url_for('raw_blob', repo=repo, path=path)

    .panel.panel-default
        .panel-heading
            .pull-right %a.btn.btn-primary.btn-xs(href=raw_url) Raw
            %h2.panel-title &= path
        - if ext == '.md':
            .panel-body = markdown(blob.data)
        - elif mimetype and mimetype.startswith('image/'):
            .panel-body %img(src=raw_url)
        - else:
            .panel-body.git-blob-pre = pygments.highlight(blob.data, lexer, pygments.formatters.HtmlFormatter(linenos='table'))

= render_blob(blob, path)

