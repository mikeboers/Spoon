%%inherit(file="/_main.haml")
%%namespace(name='tree_utils', file='/tree/_utils.haml')
%%namespace(name='repo_utils', file='./_utils.haml')
%%namespace(name='commit_utils', file='/commit/_utils.haml')
%%namespace(name='utils', file='/_utils.haml')
-!
    import datetime
    import itertools
    import pygit2 as git
    from spoon.utils import debug
-
    try:
        head = repo.git.head.get_object()
    except git.GitError:
        head = None


@breadcrumb
    %li
        %a(href=url_for('account', account=repo.account))
            &= repo.account.name
    %li
        &= repo.name




+repo_utils.media(repo, link=False, clone_url=True, avatar_size=128)
+repo_utils.page_tabs(repo)


- if auth.can('repo.delete', repo):

    .alert(class_ = 'alert-warning' if repo.is_public else 'alert-success')
        %form.repo-public-toggle(method='POST', action=url_for('repo_admin', repo=repo))
            %input(type='hidden', name='action', value='repo.public_toggle')
            - if repo.is_public:
                %button.pull-right.btn.btn-warning Lock Repo
                %strong Lock this repository.
                %br
                Make this repository private; only members of the account will be able
                to see it
            - else:
                %button.pull-right.btn.btn-success Unlock Repo
                %strong Unlock this repository.
                %br
                Make this repository public; everyone will be able to see and clone it.


- if auth.can('repo.delete', repo):
    .alert.alert-danger
        %form.git-repo-delete(action=url_for('repo_admin', repo=repo), method='POST', dataRepoName=repo.name)
            %input(type='hidden', name='action', value='repo.delete')
            %button.pull-right.btn.btn-danger(href='#', dataId=repo.id) Delete Repo
        %strong Delete this repository.
        %br
        This cannot be undone!
