%%namespace(name="utils", file="/_utils.haml")
-!
    import pygit2 as git

@title(repo, link=True)

    @_title
        %span.glyphicon.glyphicon-book
        &= repo.account.name + ' / ' + repo.name
        - if not repo.is_public:
            %span.glyphicon.glyphicon-lock

    - if link:
        %a(href=url_for('repo', repo=repo)) +_title
    - else:
        +_title


@media(repo, avatar_size=64, link=True, clone_url=False)
    
    -
        try:
            head = repo.git.head.get_object()
        except git.GitError:
            head = None

    .media

        - if clone_url: .input-group.pull-right.git-repo-clone-url
            %span.input-group-addon +utils.icon('cloud-download')
            %input.form-control(type='text', readonly=True, onclick='this.select()', value='git@%s:%s/%s' % (request.host, repo.account.name, repo.name))

        -# .pull-left
            %img.thumbnail.media-object(src=resized_img_src('/img/git-logo-pale.png', width=avatar_size, height=avatar_size), width=avatar_size, height=avatar_size)

        .media-body

            %h4.media-heading +title(repo, link=link)
            - if repo.description: %p = markdown(repo.description)
            %p %small
                - if head: Last updated ${fuzzy_time(head.commit_time)}.
                - else: %em No commits.

            - if caller: +caller.body


@page_tabs(repo, ref='master', active=None)
    - active = active if active is not None else request.endpoint
    %ul.nav.nav-tabs

        - if auth.can('repo.delete', repo):
            %li.pull-right(class_='active' if active == 'repo_admin' else '')
                %a(href=url_for('repo_admin', repo=repo))
                    +utils.icon('cog')
                    Admin

        %li(class_='active' if active ==  'repo' else '')
            %a(href='#' if active == 'overview' else url_for('repo', repo=repo))
                +utils.icon('signal')
                Overview

        %li(class_='active' if active == 'commits' else '')
            %a(href='#' if active == 'commits' else url_for('commits', repo=repo))
                +utils.icon('list')
                Commits

        %li(class_='active' if active == 'tree' else '')
            %a(href='#' if active == 'tree' else url_for('tree', repo=repo, ref=ref))
                +utils.icon('folder-open')
                Files @ ${ref|h}

        - if ref != 'master':
            %li(class_='active' if active == 'commit' else '')
                %a(href='#' if active == 'commit' else url_for('commit', repo=repo, commit=ref))
                    +utils.icon('pencil')
                    Diff @
                    &= ref

        - if caller:
            +caller.body
