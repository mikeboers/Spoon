-!
    import mimetypes
    import os

    import pygit2
    import pygments.lexers
    import pygments.formatters


@render_tree(repo, tree, base='', title=None)

    .panel.panel-info

        .panel-heading %h2.panel-title
            &= title or '/' + base

        %table.table.table-condensed

            - if base: %tr
                - parent = os.path.dirname(base)
                - if parent:
                    %td %a(href=url_for('tree', repo=repo, path=parent)) ..
                - else:
                    %td %a(href=url_for('repo', repo=repo)) ..

            - for entry in tree: %tr

                - is_tree = isinstance(repo.git[entry.oid], pygit2.Tree)
                -# %td 
                    - if is_tree:
                        %span.glyphicon.glyphicon-folder-open
                    - else:
                        %span.glyphicon.glyphicon-file
                %td
                    %a(href=url_for('tree', repo=repo, path=os.path.join(base, entry.name)))
                        &= entry.name + ('/' if is_tree else '')
                -# %td << latest commit message >>
                -# %td &= fuzzy_time
                -# %td %a(href='#') %code &= entry.hex[:8]


@render_blob(repo, blob, path)

    -
        mimetype, encoding = mimetypes.guess_type(path)
        ext = os.path.splitext(path)[1]
        try:
            lexer = pygments.lexers.get_lexer_for_filename(path)
        except pygments.util.ClassNotFound:
            lexer = pygments.lexers.TextLexer()

        raw_url = url_for('raw_object', repo=repo, prefix=blob.hex[:2], suffix=blob.hex[2:], ext=ext or '')

    .panel.panel-default.git-blob
        .panel-heading
            .pull-right %a.btn.btn-primary.btn-xs(href=raw_url) Raw
            %h2.panel-title &= path
        - if ext == '.md':
            .panel-body = markdown(blob.data)
        - elif mimetype and mimetype.startswith('image/'):
            .panel-body %img(src=raw_url)
        - else:
            .panel-body.git-blob-pre = pygments.highlight(blob.data, lexer, pygments.formatters.HtmlFormatter(linenos='table'))

