%%inherit(file='/_main.haml')
-!
    from flask import _request_ctx_stack
    from spoon.core.flask import app

    http_method_labels = dict(
        GET='success',
        POST='warning',
        PUT='warning',
        PATCH='warning',
        DELETE='danger',
    )
-
    url_adapter = _request_ctx_stack.top.url_adapter

%h1 Permissions

@header
    %thead
        %th Type
        %th Name
        - for user in users: %th &= user.name

%table.table.table-condensed
    
    +header
    -
        urls = '''
            /debug/auth
        '''.strip().split()
    - for url in urls:
        %td url
        %td %a(href=url) &= url
        -
            try:
                rule, args = url_adapter.match(url, return_rule=True)
            except:
                rule = None
            else:
                view_func = app.view_functions[rule.endpoint]
        - if rule:
            - for user in users: %td
                - for method in rule.methods:
                    - if method in http_method_labels and auth.can('http.' + method.lower(), view_func, user=user):
                        %span.label(class_='label-' + http_method_labels[method]) = 'http.' + method.lower()

    - for group in groups:

        +header

        %tr
            %td group
            %td &= group.name
            - for user in users: %td
                - if auth.can('account.read', group, user=user):
                    .span.label.label-default account.read
                - if auth.can('account.write', group, user=user):
                    .span.label.label-warning account.write
                - if auth.can('account.delete', group, user=user):
                    .span.label.label-danger account.delete
                - if auth.can('repo.create', group, user=user):
                    .span.label.label-success repo.create


        - for repo in group.repos: %tr
            %td repo
            %td &= group.name + ' / ' + repo.name
            - for user in users: %td
                - if auth.can('repo.read', repo, user=user):
                    .span.label.label-default repo.read
                - if auth.can('repo.write', repo, user=user):
                    .span.label.label-warning repo.write
                - if auth.can('repo.delete', repo, user=user):
                    .span.label.label-danger repo.delete